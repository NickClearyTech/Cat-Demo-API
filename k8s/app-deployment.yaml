apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cat-api-app
  name: cat-api-app
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: cat-api-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: cat-api-app
    spec:
      initContainers:
        - image: harbor.nicleary.com/library/catapi:5
          imagePullPolicy: Always
          name: cat-api-initializer
          command: [ 'bash', '-c', 'python3 manage.py migrate && python manage.py loaddata initial_data.json && python3 manage.py runscript initializer']
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password
            - name: POSTGRES_SERVER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: host
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: db
            - name: DEBUG
              valueFrom:
                secretKeyRef:
                  name: sys-vars
                  key: debug
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: sys-vars
                  key: secret-key
      containers:
        - image: harbor.nicleary.com/library/catapi:5
          command:  ['bash', '-c', 'gunicorn --bind :8000 --workers 16 --reload wsgi:application']
          imagePullPolicy: Always
          livenessProbe: #is it alive
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8000
            timeoutSeconds: 1
          name: cat-api-app
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password
            - name: POSTGRES_SERVER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: host
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: db
            - name: DEBUG
              valueFrom:
                secretKeyRef:
                  name: sys-vars
                  key: debug
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: sys-vars
                  key: secret-key
          readinessProbe: #did it start
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8000
            timeoutSeconds: 1
          resources: { }
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
